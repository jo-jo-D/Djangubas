# Generated by Django 5.2.3 on 2025-07-30 20:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('library', '0013_book_is_banned_book_is_deleted_book_price'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('experience', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='Family name')),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(120)])),
                ('rating', models.FloatField(default=0.0)),
                ('country', models.CharField(choices=[('DE', 'Germany'), ('UK', 'United Kingdom'), ('US', 'United States'), ('PT', 'Portugal'), ('FR', 'France'), ('ES', 'Spain'), ('IT', 'Italy')], default='DE', verbose_name='Country')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to=settings.AUTH_USER_MODEL, verbose_name='Owner'),
        ),
        migrations.CreateModel(
            name='AuthorDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biography', models.TextField(verbose_name='Biography')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='City')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('Other', 'Other'), ('ns', 'not set')], max_length=20, verbose_name='Gender')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.author', verbose_name='Author')),
            ],
        ),
        migrations.CreateModel(
            name='Borrow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_take_date', models.DateField(auto_now_add=True, verbose_name='Book Take Date')),
                ('book_return_date', models.DateField(verbose_name='Book Return Date')),
                ('is_returned', models.BooleanField(default=False, verbose_name='Is returned?')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book', verbose_name='Book')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.library', verbose_name='Library')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.member', verbose_name='Member')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Event name')),
                ('description', models.TextField(verbose_name='Event description')),
                ('timestamp', models.DateTimeField(verbose_name='Event date')),
                ('book', models.ManyToManyField(related_name='events', to='library.book', verbose_name='Books')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.library', verbose_name='Library')),
            ],
        ),
        migrations.CreateModel(
            name='EventParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('register_date', models.DateField(auto_now_add=True, verbose_name='Register date')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.event', verbose_name='Event name')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.member', verbose_name='Member')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('actors', models.ManyToManyField(related_name='movies', to='library.actor')),
                ('director', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movies', to='library.director')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(verbose_name='Created at')),
                ('title', models.CharField(max_length=255, unique_for_date='created_at', verbose_name='Title')),
                ('text', models.TextField(verbose_name='Text')),
                ('moderated', models.BooleanField(default=False, verbose_name='Moderated?')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.member', verbose_name='Author')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.library', verbose_name='Library')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('review', models.TextField(verbose_name='Review')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='library.book', verbose_name='Book')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.member', verbose_name='Reviewer')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('married', models.BooleanField(verbose_name='Married?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='library.user', verbose_name='Info')),
            ],
        ),
    ]
